# Generated by Copilot
name: CI/CD

on:
  push:
    branches: [main, dev, feature/**]
  pull_request:
    branches: [main, dev]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/testdb"
      NODE_ENV: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install backend dependencies
        run: npm install

      - name: Install frontend dependencies
        run: npm install
        working-directory: ./frontend

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Run Prisma migrations
        run: npx prisma migrate deploy

      - name: Lint backend
        run: npx eslint src

      # Si tienes tests, descomenta la siguiente línea
      # - name: Run backend tests
      #   run: npm test

      - name: Build frontend
        run: npm run build
        working-directory: ./frontend

      # Si tienes tests de frontend, descomenta la siguiente línea
      # - name: Run frontend tests
      #   run: npm test
      #   working-directory: ./frontend
