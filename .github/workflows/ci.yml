# Generated by Copilot
name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Run migrations
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SEED_USER_PASSWORD: ${{ secrets.SEED_USER_PASSWORD }}

      - name: Run seed
        run: npx prisma db seed
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SEED_USER_PASSWORD: ${{ secrets.SEED_USER_PASSWORD }}

      - name: Run unit tests with coverage
        run: npm run test:coverage
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SEED_USER_PASSWORD: ${{ secrets.SEED_USER_PASSWORD }}

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SEED_USER_PASSWORD: ${{ secrets.SEED_USER_PASSWORD }}

      - name: Build project
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: ./dist

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: ./coverage

      - name: Snyk Security Scan
        uses: snyk/actions/node@v4
        with:
          args: monitor --all-projects
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: .
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SEED_USER_PASSWORD: ${{ secrets.SEED_USER_PASSWORD }}

  sonarcloud:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=neiland85_facturacion-autonomos
            -Dsonar.organization=neiland85
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
