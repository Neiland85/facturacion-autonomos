// Importa todas las dependencias necesarias
const express = require('express'); // Generated by Copilot
const usuarioRoutes = require('./routes/usuario'); // Generated by Copilot
const clienteRoutes = require('./routes/cliente'); // Generated by Copilot
const facturaRoutes = require('./routes/factura'); // Generated by Copilot
const swaggerUi = require('swagger-ui-express'); // Generated by Copilot
const swaggerJsdoc = require('swagger-jsdoc'); // Generated by Copilot
const cors = require('cors'); // Generated by Copilot
const morgan = require('morgan'); // Generated by Copilot
const rateLimit = require('express-rate-limit'); // Generated by Copilot
const helmet = require('helmet'); // Generated by Copilot
const i18next = require('i18next'); // Generated by Copilot
const i18nextMiddleware = require('i18next-http-middleware'); // Generated by Copilot
const client = require('prom-client'); // Generated by Copilot

// Crea la app justo después de los imports
const app = express(); // Generated by Copilot

// Middlewares globales
app.use(express.json()); // Generated by Copilot
app.use(cors()); // Generated by Copilot
app.use(morgan('dev')); // Generated by Copilot
app.use(
  rateLimit({
    windowMs: 15 * 60 * 1000, // 15 minutos
    max: 100, // máximo 100 peticiones por IP
  }),
); // Generated by Copilot
app.use(helmet()); // Generated by Copilot

// Internacionalización
i18next.use(i18nextMiddleware.LanguageDetector).init({
  fallbackLng: 'es',
  resources: {
    es: { translation: { welcome: 'Bienvenido' } },
    en: { translation: { welcome: 'Welcome' } },
  },
}); // Generated by Copilot
app.use(i18nextMiddleware.handle(i18next)); // Generated by Copilot

// Rutas principales
app.use('/usuarios', usuarioRoutes); // Generated by Copilot
app.use('/clientes', clienteRoutes); // Generated by Copilot
app.use('/facturas', facturaRoutes); // Generated by Copilot

// Configuración de Swagger/OpenAPI
const swaggerSpec = swaggerJsdoc({
  definition: {
    openapi: '3.0.0',
    info: {
      title: 'API Facturación Autónomos',
      version: '1.0.0',
      description:
        'Documentación de la API para la gestión de usuarios, clientes y facturas de autónomos.',
      contact: {
        name: 'Soporte',
        email: 'soporte@facturacion-autonomos.com',
      },
    },
    servers: [
      {
        url: 'http://localhost:3000',
        description: 'Servidor local',
      },
    ],
  },
  apis: ['./src/routes/*.js'],
}); // Generated by Copilot

app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerSpec)); // Generated by Copilot

// Ruta raíz
app.get('/', (req, res) => {
  res.send('API de Facturación Autónomos funcionando 🚀');
}); // Generated by Copilot

// Ruta para métricas de Prometheus
const collectDefaultMetrics = client.collectDefaultMetrics;
collectDefaultMetrics(); // Generated by Copilot

app.get('/metrics', async (req, res) => {
  res.set('Content-Type', client.register.contentType);
  res.end(await client.register.metrics());
}); // Generated by Copilot

// Manejo de errores global
app.use((err, req, res, next) => {
  console.error('Error:', err);
  res.status(500).json({ error: 'Error interno del servidor' });
}); // Generated by Copilot

// Inicialización del servidor
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`Servidor escuchando en puerto ${PORT}`);
}); // Generated by Copilot

console.log('¡TypeScript está funcionando!'); // Generated by Copilot

module.exports = app; // Generated by Copilot
